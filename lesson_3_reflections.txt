When would you want to use a remote repository rather than keeping all your work local?

-working from different locations on different terminals
-working in a group with other people
-storage purposes
-enable sharing with other people and get feedback

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

-Someone else might have uploaded a file that you don't want to pull just yet
-Multiple sources might be pushing on GitHub
-You may only want to pull specific files, not everything

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork: when you want to use someone else's repository but don't want/can't make changes to it and want to have
your own version of it.

Clone: when you want to copy a repository using either an online or a local source.

Branch: when you want to create a new path within the same repository to try new things or make changes
without affecting the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

-help us know how far ahead/behind the local copy is
-can determine if remote and local are out of sync
-can determine if there is a need to pull/push

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Use collaboration software like google docs. Handling and using such software might make the interaction
and work smoother/easier. However, it would be harder to manage different version and identify them. Also,
changes and version are better seen on GitHub as it gives more control to the user.

When would you want to make changes in a separate branch rather than directly in master? What benefits does
each approach have?

Making changes in a separate branch is beneficial when we want to explore something new or make changes that won't
be in the final version for sure; other people might want to review them first or we might want to test things out
first as these changes might have undesirable results, different from our expectations.

Changing directly in master on the other, is a lot less confusing and less time consuming, however this might lead
to introducing changes that have not been agreed upon or are buggy to the "final" version.